version: 0.2

env:
  variables:
    PYTHON_VERSION: "3.9"
    APP_NAME: "todo-api"
    FRONTEND_URL: "http://localhost:3000"

  secrets-manager:
    DB_HOST:     "dev-db-credentials-3:db_host"
    DB_USER:     "dev-db-credentials-3:db_user"
    DB_PASSWORD: "dev-db-credentials-3:db_password"
    DB_NAME:     "dev-db-credentials-3:db_name"
    
phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo "Installing Python dependencies..."
      - pip install -r requirements.txt
      - pip install pytest

  pre_build:
    commands:
      - echo "Checking DB connection..."
      - |
        python -c "
        import os, sys, mysql.connector
        try:
            mysql.connector.connect(
                host=os.environ['DB_HOST'],
                user=os.environ['DB_USER'],
                password=os.environ['DB_PASSWORD'],
                database=os.environ['DB_NAME']
            ).close()
            print('✅ DB connection successful')
        except Exception as e:
            print(f'❌ DB connection failed: {e}')
            sys.exit(1)
        "

  build:
    commands:
      - echo "Running tests..."
      - pytest tests/ || echo "⚠️ No tests or failed tests"
      - echo "Preparing build artifact..."
      - mkdir -p build
      - rm -rf build 
      - cp -r --parents $(find . -type f -not -path './build/*') build/
      - cd build
      - rm -rf .git __pycache__ *.pyc tests/

  post_build:
    commands:
      - echo "Validating Flask app import..."
      - |
        python -c "
        try:
            from app import app
            print('✅ Flask app import successful')
        except Exception as e:
            print(f'❌ Flask app import failed: {e}')
            sys.exit(1)
        "
      - echo "Build finished."

artifacts:
  base-directory: build
  files:
    - '**/*'
  name: $APP_NAME-$(date +%Y-%m-%d-%H-%M-%S)